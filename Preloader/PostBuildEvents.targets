<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!-- Defining the file names of project-specific data we'll load later. -->
    <PropertyGroup>
        <AssetTargetsFile>..\Assets.targets</AssetTargetsFile>
        <GameDirTargetsFile>..\GameDirectory.targets</GameDirTargetsFile>
        <GameDirTargetsFullPath>$(ProjectDir)$(GameDirTargetsFile)</GameDirTargetsFullPath>
    </PropertyGroup>


    <!-- Ensure the user (you!) has actually set everything up properly. -->
    <Target Name="EnsureGameDirectoryDefined" BeforeTargets="PrepareForBuild">
        <PropertyGroup>
            <GameDirError>This project requires you to define your own game installation directory in a separate $(GameDirTargetsFile) file. Create this file in the same folder as the $(MSBuildProjectFile) and add a 'GameDirectory' MSBuild property to it to proceed. There is an example file in $(MSBuildThisFileDirectory) you can copy and adjust.</GameDirError>
        </PropertyGroup>
        <Error Condition="!Exists('$(GameDirTargetsFullPath)')" Text="$(GameDirError)"/>
    </Target>

    <!-- Import extra information from project-specific files. -->
    <Import Project="$(ProjectDir)$(AssetTargetsFile)" Condition="Exists('$(ProjectDir)$(AssetTargetsFile)')"/>
    <!-- This import isn't actually optional, but making it conditional allows the user-friendly error task above to run. -->
    <Import Project="$(GameDirTargetsFullPath)" Condition="Exists('$(GameDirTargetsFullPath)')"/>
    <!-- Ensure that the defined game directory path is valid. -->
    <Target Name="EnsureGameDirectoryExists" AfterTargets="EnsureGameDirectoryDefined">
        <Error Condition="!Exists('$(ProfileDirectory)')" Text="$(GameDirError)"/>
    </Target>
    <PropertyGroup>
        <!-- The mod directory to install our mod to. -->
        <ModDirectory>$(ProfileDirectory)\BepInEx\patchers\0-$(Product)\</ModDirectory>
        <!-- Where to create the temporary directory for creating the release zip files. -->
        <ZipDir>$(ProjectDir)..\Thunderstore\</ZipDir>
        <!-- The internal structure of the zip file. -->
        <ZipStructure>BepInEx\patchers\$(Product)\</ZipStructure>
    </PropertyGroup>

    <!-- Copy newly built files to the game directory. -->
    <Target Name="CopyToGameFolder" AfterTargets="Build">
        <Message Importance="high" Text="Copying files to game directory."/>
        <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(ModDirectory)"/>
        <Copy SourceFiles="@(Assets)" DestinationFolder="$(ModDirectory)%(Assets.RelativeDir)"/>
    </Target>

    <!-- Find the current version of the assembly. -->
    <Target Name="GetAssemblyVersion" AfterTargets="Build" Condition="$(Configuration.Contains('Release'))">
        <GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
            <Output TaskParameter="Assemblies" ItemName="AssemblyIdentity"/>
        </GetAssemblyIdentity>
        <PropertyGroup>
            <AssemblyVersion>%(AssemblyIdentity.Version)</AssemblyVersion>
        </PropertyGroup>
        <Message Importance="high" Text="Assembly Version: $(AssemblyVersion)"/>
    </Target>

    <!-- Automatically create the zip file, ready for distribution. -->
    <Target Name="MoveToOutput" AfterTargets="Build" Condition="$(Configuration.Contains('Release'))">
        <Message Importance="high" Text="Copying files to output directory. $(ZipDir)"/>
        <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(ZipDir)$(ZipStructure)"/>
        <Copy SourceFiles="@(Assets)" DestinationFolder="$(ZipDir)$(ZipStructure)%(Assets.RelativeDir)"/>
    </Target>
</Project>